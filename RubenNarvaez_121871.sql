/* Examen Final Practico BBDD I*/
/* Ruben Cherif Narvaez */


/* 1 */

SELECT B.NOMBRE, C.NOMBRE_EUS, B.FECHA_NACIMIENTO, B.LUGAR_NACIMIENTO
FROM BIKER B, COMUNIDAD C
WHERE (B.COD_COMU = C.COD_COMU) AND (B.FECHA_NACIMIENTO BETWEEN '01/01/1982' AND '01/01/1985');

/* 2*/
SELECT C.NOMBRE_ESP, COUNT (*) Corredores_Totales
FROM COMUNIDAD C, BIKER B
WHERE (B.COD_COMU = C.COD_COMU)
HAVING COUNT (*) > 1
GROUP BY C.NOMBRE_ESP;

/* 3 */
SELECT DISTINCT C.NOMBRE_EUS, E.NOMBRE_EQ, T.ANO, COUNT (P.COD_BIKER)
FROM PERTENECE P, EQUIPO E, COMUNIDAD C, TEMPORADA T
WHERE (C.COD_COMU = E.COD_COMU) AND (E.CODIGO_EQ = P.CODIGO_EQ) AND (P.ROL = 'LI') AND (P.ANO = T.ANO)
GROUP BY T.ANO, C.NOMBRE_EUS, E.NOMBRE_EQ;


/* 4*/
SELECT C.SEDE, C.FECHA_CARRERA 
FROM CARRERA C, BIKER B, PARTICIPA P
WHERE (B.NOMBRE = 'Lilian Soriano') AND (C.VUELTAS > 3) AND (C.FECHA_CARRERA = P.FECHA_CARRERA) AND (P.COD_BIKER = B.COD_BIKER)
ORDER BY C.FECHA_CARRERA ASC;

/* 5 */
SELECT B.SEXO, MAX(P.TIEMPO_LLEGADA) AS Carrera_mas_lenta
FROM BIKER B, PARTICIPA P
WHERE (B.COD_BIKER = P.COD_BIKER)
GROUP BY SEXO;

/* 6*/ 
SELECT 'Las carreras en '||S.SEDE|| ' de categoria '|| S.CATEGORIA || ' suelen ser de distancia '|| ((S.LONGITUD  * C.VUELTAS) * 0.001) || 'kms.'
FROM SEDE S, CARRERA C
WHERE (S.SEDE = C.SEDE);


/* 7 */
SELECT B.NOMBRE, COUNT (*)
FROM BIKER B, PARTICIPA P
WHERE (B.COD_BIKER = P.COD_BIKER) AND (P.POSICION_LLEGaDA < 4)
HAVING COUNT (*) > 1
group by b.nombre;

/* 8 REVISAR*/
SELECT S.SEDE, C.FECHA_CARRERA, C.NOMBRE_EUS, B.NOMBRE, P.POSICION_LLEGADA
FROM SEDE S, COMUNIDAD C, CARRERA C, PARTICIPA P, BIKER B
WHERE (S.SEDE = C.SEDE) AND (S.COD_COMU = C.COD_COMU) AND (C.FECHA_CARRERA = P.FECHA_CARRERA) AND (P.COD_BIKER = B.COD_BIKER) AND (p.posicion_llegada < 11)
ORDER BY P.POSICION_LLEGADA ASC;

/* 9 Rev*/
SELECT DISTINCT E.NOMBRE_EQ, Ce.NOMBRE_ESP Equipo_Comunidad, b.nombre, CB.NOMBRE_ESP Corredor_Comunidad
FROM COMUNIDAD CE, COMUNIDAD CB, BIKER B, EQUIPO E, PERTENECE P
WHERE (E.COD_COMU = CE.COD_COMU) AND (CB.COD_COMU = B.COD_COMU) AND (B.COD_BIKER = P.COD_BIKER) AND (P.CODIGO_EQ = E.CODIGO_EQ) AND (E.COD_COMU = CE.COD_COMU)
ORDER BY E.NOMBRE_EQ ASC, CB.NOMBRE_ESP DESC;

/* 10 */
SELECT B.NOMBRE, B.COD_BIKER 
FROM COMUNIDAD CB, COMUNIDAD CE, PERTENECE P, EQUIPO E, BIKER B, TEMPORADA T
WHERE (T.ANO = '2019') AND (B.COD_COMU = CB.COD_COMU) AND (B.COD_BIKER = P.COD_BIKER) AND (P.CODIGO_EQ = E.CODIGO_EQ) 
AND (E.COD_COMU = CE.COD_COMU); /* (E.COD_COMU = CE.COD_COMU) AND (CE.COD_COMU = CB.COD_COMU);*/

/* 11 */
INSERT INTO BIKER VALUES(7, 'Ruben Cherif', 'NA', '01/04/99', 'Pamplona', 'M');
INSERT INTO PERTENECE VALUES('2019', 7, 'SAR', 'GR');

/*12*/
DELETE FROM COMUNIDAD 
WHERE (NOMBRE_ESP = 'Navarra');

/* restricción de integridad: Si miramos en las restricciones de la tabla vemos como
"NOMBRE_ESP" IS NOT NULL el campo no admite valores nulos, por tanto, no puede ser eliminado*/

/* 13 */
SELECT T.ANO, T.NUMERO_CARRERAS
FROM TEMPORADA T;
/*
       ANO NUMERO_CARRERAS
---------- ---------------
      2018               2
      2019               2
*/

SELECT C.ANO, COUNT (C.ANO)
FROM CARRERA C
GROUP BY C.ANO;

/*     ANO COUNT(C.ANO)
---------- ------------
      2018            2
      2019            3
*/

UPDATE TEMPORADA
SET numero_carreras = 3
WHERE (ANO = '2019');

/* 14 */
CREATE TABLE PARTICIPA_HISTORICO( 
    COD_PART_HIST VARCHAR(7) NOT NULL,
    FECHA_CARRERA DATE NOT NULL,
    COD_BIKER NUMBER NOT NULL, 
    POSICION_LLEGADA NUMBER NOT NULL,
    TIEMPO_LLEGADA NUMBER,
    FECHA DATE NOT NULL,
    TEXTO_VAR VARCHAR(20) NOT NULL,
    CONSTRAINT PART_HIST_PK PRIMARY KEY (COD_PART_HIST)
)















